{"version":3,"file":"static/js/309.694368ed.chunk.js","mappings":"yRAKaA,EAAYC,EAAAA,GAAAA,IAAH,mSAiBTC,EAAQD,EAAAA,GAAAA,EAAH,qIAiBLE,GATWF,EAAAA,GAAAA,EAAH,0JASAA,EAAAA,GAAAA,MAAH,2GAOLG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,qEAKRK,GAAeL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,wEAKZO,EAAeP,EAAAA,GAAAA,IAAH,2DAKZQ,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,iOAaLU,EAAWV,EAAAA,GAAAA,OAAH,kS,SC3DfW,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,SAAUF,EAAAA,KACPG,IAAI,EAAG,+CACPC,IAAI,GAAI,aACRC,SAAS,qBACZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,uBAGzCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACtB,EAAD,WACE,SAAC,KAAD,CACEuB,cAAe,CAAEJ,MAAO,GAAIJ,SAAU,IACtCS,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GACjBN,GACEO,EAAAA,EAAAA,IAAM,CACJT,MAAOO,EAAOP,MACdJ,SAAUW,EAAOX,YAGrBY,EAAQE,WACT,EAXH,SAaG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,YACE,SAAC7B,EAAD,6BACA,UAACC,EAAD,YACE,SAACC,EAAD,KACA,oCACC0B,EAAOX,OAASY,EAAQZ,OACvB,SAACX,EAAD,UAAesB,EAAOX,QACpB,MACJ,SAACV,EAAD,CAAOuB,KAAK,QAAQC,KAAK,cAE3B,UAAC9B,EAAD,YACE,SAACG,EAAD,KACA,uCACCwB,EAAOf,UAAYgB,EAAQhB,UAC1B,SAACP,EAAD,UAAesB,EAAOf,WACpB,MACJ,SAACN,EAAD,CAAOuB,KAAK,WAAWC,KAAK,iBAE9B,SAACtB,EAAD,CAAUqB,KAAK,SAAf,qBAnBH,KAyBR,ECpDD,EAXc,WACZ,OACE,4BAEE,sCAEA,SAACZ,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BiMailSend } from 'react-icons/bi';\nimport { TbPassword } from 'react-icons/tb';\nimport { Field as FormikField } from 'formik';\n\nexport const LoginWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n\n  background-color: #15172b;\n\n  border-radius: 20px;\n  height: 500px;\n  padding: 20px;\n  width: 320px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const Title = styled.p`\n  color: #eee;\n  font-family: sans-serif;\n  font-size: 36px;\n  font-weight: 600;\n  margin-bottom: 45px;\n`;\n\nexport const Subtitle = styled.p`\n  color: #eee;\n  font-family: sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-top: 10px;\n  margin-bottom: 45px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const MailIcon = styled(BiMailSend)`\n  margin-right: 10px;\n  stroke-width: 1px;\n`;\n\nexport const PasswordIcon = styled(TbPassword)`\n  margin-right: 10px;\n  stroke-width: 1, 5px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const Field = styled(FormikField)`\n  background-color: #303245;\n  border-radius: 12px;\n  border: 0;\n  color: #eee;\n  font-size: 18px;\n  height: 40px;\n  outline: 0;\n  padding: 4px 20px 0;\n  width: 280px;\n  margin-bottom: 10px;\n`;\n\nexport const LoginBtn = styled.button`\n  background-color: rgb(183 0 221);\n  border-radius: 12px;\n  border: 0;\n  color: #eee;\n  cursor: pointer;\n  font-size: 18px;\n  height: 50px;\n  margin-top: 40px;\n  text-align: center;\n  width: 100%;\n\n  &:hover {\n    background-color: rgb(94 7 112);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  LoginWrap,\n  Title,\n  Label,\n  Field,\n  MailIcon,\n  PasswordIcon,\n  ErrorMessage,\n  LoginBtn,\n} from './LoginForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(2, 'Password should contain more than 2 symbols')\n    .max(50, 'Too Long!')\n    .required('Field is equired*'),\n  email: Yup.string().email('Invalid email').required('Field is equired*'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <LoginWrap>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          dispatch(\n            logIn({\n              email: values.email,\n              password: values.password,\n            })\n          );\n          actions.resetForm();\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <Title>Welcome Back!</Title>\n            <Label>\n              <MailIcon />\n              <span>Email</span>\n              {errors.email && touched.email ? (\n                <ErrorMessage>{errors.email}</ErrorMessage>\n              ) : null}\n              <Field type=\"email\" name=\"email\" />\n            </Label>\n            <Label>\n              <PasswordIcon />\n              <span>Password</span>\n              {errors.password && touched.password ? (\n                <ErrorMessage>{errors.password}</ErrorMessage>\n              ) : null}\n              <Field type=\"password\" name=\"password\" />\n            </Label>\n            <LoginBtn type=\"submit\">Login</LoginBtn>\n          </Form>\n        )}\n      </Formik>\n    </LoginWrap>\n  );\n};\n","// import { Helmet } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      {/* <Helmet> */}\n      <title>Login</title>\n      {/* </Helmet> */}\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["LoginWrap","styled","Title","Label","MailIcon","BiMailSend","PasswordIcon","TbPassword","ErrorMessage","Field","FormikField","LoginBtn","SignupSchema","Yup","shape","password","min","max","required","email","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","errors","touched","type","name"],"sourceRoot":""}