{"version":3,"file":"static/js/690.acee39d8.chunk.js","mappings":"+NAGaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,SAba,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAGC,WACE,sCAEE,kBAAOC,KAAK,QAAQC,KAAK,cAE3B,yCAEE,kBAAOD,KAAK,WAAWC,KAAK,iBAE9B,mBAAQD,KAAK,SAAb,sBAGL,ECjBD,EAXc,WACZ,OACE,4BACE,SAAC,KAAD,WACE,wCAEF,SAACd,EAAD,MAGL,C,qICTDgB,EAAAA,EAAAA,SAAAA,QAAyB,wCAEzB,IAAMC,EAAgB,SAAAC,GACpBF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDE,EACzD,EAMYC,GAAWC,EAAAA,EAAAA,IACtB,gBADsC,mCAEtC,WAAOC,EAAMC,GAAb,gGAE2BN,EAAAA,EAAAA,KAAW,gBAAiBK,GAFvD,cAEUE,EAFV,OAGIN,EAAcM,EAASC,KAAKN,OAHhC,kBAIWK,EAASC,MAJpB,yDAMWF,EAASG,gBAAgB,KAAMC,UAN1C,yDAFsC,yDAa3BlB,GAAQY,EAAAA,EAAAA,IAAiB,aAAD,mCAAe,WAAOC,EAAMC,GAAb,gGAEzBN,EAAAA,EAAAA,KAAW,eAAgBK,GAFF,cAE1CE,EAF0C,OAGhDN,EAAcM,EAASC,KAAKN,OAHoB,kBAIzCK,EAASC,MAJgC,yDAMzCF,EAASG,gBAAgB,KAAMC,UANU,yDAAf,0DAUfN,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAOO,EAAGL,GAAV,0FAE5CN,EAAAA,EAAAA,KAAW,gBAFiC,OA1BpDA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA8C,GA0BM,wEAK3CM,EAASG,gBAAgB,KAAMC,UALY,wDAAhB,0DASXN,EAAAA,EAAAA,IACzB,eADyC,mCAEzC,WAAOO,EAAGL,GAAV,8EACQM,EAAQN,EAASO,WAGA,QAFjBC,EAAiBF,EAAMG,KAAKb,OAFpC,yCAKWI,EAASG,gBAAgB,yBALpC,uBASIR,EAAca,GATlB,SAU2Bd,EAAAA,EAAAA,IAAU,aAVrC,cAUUO,EAVV,yBAWWA,EAASC,MAXpB,2DAaWF,EAASG,gBAAgB,KAAMC,UAb1C,0DAFyC,wD","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js","redux/auth/operations.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      const response = await axios.post('/users/signup', user);\n      setAuthHeader(response.data.token);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    const response = await axios.post('/users/login', user);\n    setAuthHeader(response.data.token);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const logout = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('users/logout');\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const refreshUser = createAsyncThunk(\n  'auth/current',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue('Unable to fetch user');\n    }\n\n    try {\n      setAuthHeader(persistedToken);\n      const response = await axios.get('/users/me');\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n"],"names":["LoginForm","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","type","name","axios","setAuthHeader","token","register","createAsyncThunk","user","thunkAPI","response","data","rejectWithValue","message","_","state","getState","persistedToken","auth"],"sourceRoot":""}