{"version":3,"file":"static/js/836.d9381f04.chunk.js","mappings":"2RAKaA,EAAeC,EAAAA,GAAAA,IAAH,mSAiBZC,EAAQD,EAAAA,GAAAA,EAAH,2HAQLE,EAAWF,EAAAA,GAAAA,EAAH,0JASRG,EAAQH,EAAAA,GAAAA,MAAH,0GAOLI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,qEAKRM,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,IAAPP,CAAH,qEAKRQ,GAAeR,EAAAA,EAAAA,IAAOS,EAAAA,IAAPT,CAAH,wEAKZU,EAAeV,EAAAA,GAAAA,IAAH,2DAKZW,GAAQX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,iOAaLa,EAAcb,EAAAA,GAAAA,OAAH,kS,SC9DlBc,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,8BACPC,IAAI,GAAI,8BACRC,SAAS,qBACZC,SAAUN,EAAAA,KACPG,IAAI,EAAG,+CACPC,IAAI,GAAI,aACRC,SAAS,qBACZE,MAAOP,EAAAA,KAAaO,MAAM,iBAAiBF,SAAS,uBAGzCG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC1B,EAAD,WACE,SAAC,KAAD,CACE2B,cAAe,CAAET,KAAM,GAAIK,MAAO,GAAID,SAAU,IAChDM,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBN,GACEO,EAAAA,EAAAA,IAAS,CACPd,KAAMY,EAAOZ,KACbK,MAAOO,EAAOP,MACdD,SAAUQ,EAAOR,YAGrBS,EAAQE,WACT,EAZH,SAcG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,YACE,SAACjC,EAAD,uBACA,SAACC,EAAD,0CAEA,UAACC,EAAD,YACE,SAACC,EAAD,KACA,uCACC6B,EAAOhB,MAAQiB,EAAQjB,MACtB,SAACP,EAAD,UAAeuB,EAAOhB,OACpB,MACJ,SAACN,EAAD,CAAOwB,KAAK,OAAOlB,KAAK,aAE1B,UAACd,EAAD,YACE,SAACG,EAAD,KACA,oCACC2B,EAAOX,OAASY,EAAQZ,OACvB,SAACZ,EAAD,UAAeuB,EAAOX,QACpB,MACJ,SAACX,EAAD,CAAOwB,KAAK,QAAQlB,KAAK,cAE3B,UAACd,EAAD,YACE,SAACK,EAAD,KACA,uCACCyB,EAAOZ,UAAYa,EAAQb,UAC1B,SAACX,EAAD,UAAeuB,EAAOZ,WACpB,MACJ,SAACV,EAAD,CAAOwB,KAAK,WAAWlB,KAAK,iBAE9B,SAACJ,EAAD,CAAasB,KAAK,SAAlB,wBA7BH,KAmCR,ECrED,EAXiB,WACf,OACE,4BAEE,yCAEA,SAACZ,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BiUser, BiMailSend } from 'react-icons/bi';\nimport { TbPassword } from 'react-icons/tb';\nimport { Field as FormikField } from 'formik';\n\nexport const RegisterWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n\n  background-color: #15172b;\n\n  border-radius: 20px;\n  height: 500px;\n  padding: 20px;\n  width: 320px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const Title = styled.p`\n  color: #eee;\n  font-family: sans-serif;\n  font-size: 36px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport const Subtitle = styled.p`\n  color: #eee;\n  font-family: sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin-top: 10px;\n  margin-bottom: 45px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const UserIcon = styled(BiUser)`\n  margin-right: 10px;\n  stroke-width: 1px;\n`;\n\nexport const MailIcon = styled(BiMailSend)`\n  margin-right: 10px;\n  stroke-width: 1px;\n`;\n\nexport const PasswordIcon = styled(TbPassword)`\n  margin-right: 10px;\n  stroke-width: 1, 5px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const Field = styled(FormikField)`\n  background-color: #303245;\n  border-radius: 12px;\n  border: 0;\n  color: #eee;\n  font-size: 18px;\n  height: 40px;\n  outline: 0;\n  padding: 4px 20px 0;\n  width: 280px;\n  margin-bottom: 10px;\n`;\n\nexport const RegisterBtn = styled.button`\n  background-color: rgb(183 0 221);\n  border-radius: 12px;\n  border: 0;\n  color: #eee;\n  cursor: pointer;\n  font-size: 18px;\n  height: 50px;\n  margin-top: 40px;\n  text-align: center;\n  width: 100%;\n\n  &:hover {\n    background-color: rgb(94 7 112);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport {\n  RegisterWrap,\n  RegisterBtn,\n  Field,\n  Title,\n  Subtitle,\n  Label,\n  UserIcon,\n  MailIcon,\n  PasswordIcon,\n  ErrorMessage,\n} from './RegisterForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Your username is too short')\n    .max(50, 'Your username is too Long!')\n    .required('Field is equired*'),\n  password: Yup.string()\n    .min(2, 'Password should contain more than 2 symbols')\n    .max(50, 'Too Long!')\n    .required('Field is equired*'),\n  email: Yup.string().email('Invalid email').required('Field is equired*'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <RegisterWrap>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          dispatch(\n            register({\n              name: values.name,\n              email: values.email,\n              password: values.password,\n            })\n          );\n          actions.resetForm();\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <Title>Welcome</Title>\n            <Subtitle>Let's create your account!</Subtitle>\n\n            <Label>\n              <UserIcon />\n              <span>Username</span>\n              {errors.name && touched.name ? (\n                <ErrorMessage>{errors.name}</ErrorMessage>\n              ) : null}\n              <Field type=\"text\" name=\"name\" />\n            </Label>\n            <Label>\n              <MailIcon />\n              <span>Email</span>\n              {errors.email && touched.email ? (\n                <ErrorMessage>{errors.email}</ErrorMessage>\n              ) : null}\n              <Field type=\"email\" name=\"email\" />\n            </Label>\n            <Label>\n              <PasswordIcon />\n              <span>Password</span>\n              {errors.password && touched.password ? (\n                <ErrorMessage>{errors.password}</ErrorMessage>\n              ) : null}\n              <Field type=\"password\" name=\"password\" />\n            </Label>\n            <RegisterBtn type=\"submit\">Register</RegisterBtn>\n          </Form>\n        )}\n      </Formik>\n    </RegisterWrap>\n  );\n};\n","// import { Helmet } from 'react-helmet-async';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      {/* <Helmet> */}\n      <title>Register</title>\n      {/* </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterWrap","styled","Title","Subtitle","Label","UserIcon","BiUser","MailIcon","BiMailSend","PasswordIcon","TbPassword","ErrorMessage","Field","FormikField","RegisterBtn","SignupSchema","Yup","shape","name","min","max","required","password","email","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","errors","touched","type"],"sourceRoot":""}